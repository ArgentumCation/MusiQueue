{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["loadYT","App","mqlListener","setState","desktopMode","state","displayMenu","toggleMenu","enqueue","song","queue","push","dequeue","index","indexOf","splice","mql","window","matchMedia","addListener","matches","this","menuCallback","songQueue","Component","Header","className","dest","text","map","el","key","props","Logo","href","Main","Instructions","SearchForm","handleChange","event","value","target","search","preventDefault","query","myHeaders","Headers","append","fetch","method","headers","redirect","then","response","result","results","JSON","parse","items","songList","item","title","snippet","artist","channelTitle","cover","thumbnails","default","url","id","videoId","undefined","searchCallback","catch","error","console","log","aria-label","onClick","icon","faSearch","htmlFor","type","onChange","placeholder","name","SearchCard","addToQueue","enqueueCallback","stringify","src","QueueCard","removeFromQueue","dequeueCallback","MediaControls","player","playerState","current","getPlayerState","pauseVideo","playVideo","faPlay","faStepForward","Dashboard","updateSearchResults","songs","searchResults","showPlayer","loadVideoById","React","createRef","playerVisible","style","display","ref","show","YTid","SearchResults","YouTube","onPlayerReady","Promise","resolve","tag","document","createElement","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","YT","Player","events","onReady","onStateChange","data","PlayerState","ENDED","length","Queue","prevProps","MenuItem","dispayString","Toggle","faBars","Footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","process","origin","addEventListener","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7bf5dece.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faBars, faSearch, faStepForward, faPlay} from '@fortawesome/free-solid-svg-icons'\n\nconst API_KEY = \"AIzaSyCwlrxe-0OpRgnkt31ng6LXGRGbTnX0Vb4\";\n\nclass App extends Component {\n\n  //Keeps track of whether or not we are in desktop mode, resets the menu\n  mqlListener = () => {\n    this.setState({\n      desktopMode: !this.state.desktopMode,\n      displayMenu: !this.state.desktopMode\n    })\n  }\n\n  //Toggle menu visibility\n  toggleMenu = () => {\n\n    this.setState({\n      displayMenu: !this.state.displayMenu\n    });\n  }\n\n  constructor() {\n    super()\n    let mql = window.matchMedia('(min-width: 468px)');\n    mql.addListener(this.mqlListener);\n    //menuDisplay controls whether or not nav is shown\n    this.state = {\n      desktopMode: mql.matches,\n      displayMenu: mql.matches,\n      queue: []\n    }\n  }\n\n  enqueue = (song) => {\n    let queue = this.state.queue;\n    queue.push(song);\n    this.setState({queue: queue})\n  }\n  dequeue = (song) => {\n    let queue = this.state.queue;\n    const index = queue.indexOf(song, 0)\n    if (index > -1) {\n      queue.splice(index, 1)\n    }\n    this.setState({queue: queue})\n  }\n\n  render() {\n    return (<div><Header displayMenu={this.state.displayMenu} menuCallback={this.toggleMenu}/>\n      <Main dequeue={this.dequeue} enqueue={this.enqueue} songQueue={this.state.queue}/>\n      <Footer/>\n    </div>);\n  }\n}\n\nclass Header extends Component {\n  render() {\n    return (<header>\n      <nav>\n        <ul className=\"menu\">\n          <Logo/> {\n            [\n              {\n                dest: \"/\",\n                text: \"Home\"\n              }, {\n                dest: \"about.html\",\n                text: \"About\"\n              }, {\n                dest: \"https://github.com/info340b-wi20/project-ajayk111\",\n                text: \"GitHub\"\n              }\n            ].map((el) => <MenuItem key={el.text} displayMenu={this.props.displayMenu} dest={el.dest} text={el.text}/>)\n          }\n          <Toggle menuCallback={this.props.menuCallback}/>\n        </ul>\n      </nav>\n    </header>);\n  }\n\n}\n\nclass Logo extends Component {\n  render() {\n    return (<li className=\"logo\">\n      <h1>\n        <a href=\"index.html\">MusiQueue</a>\n      </h1>\n    </li>);\n  }\n}\n\nclass Main extends Component {\n  render() {\n    return (<main>\n      <Dashboard dequeue={this.props.dequeue} songQueue={this.props.songQueue} enqueue={this.props.enqueue}/>\n      <Queue dequeue={this.props.dequeue} songQueue={this.props.songQueue}/>\n    </main>);\n  }\n}\n\nclass Instructions extends Component {\n  render() {\n    return (<p>\n      <strong>Instructions:\n      </strong> Select \"Join room\" if somebody is already hosting a listening session. Otherwise, click \"Create room\" to begin a session. Then, search for a song below and click to add it to the queue. Click on a song in the queue to remove it</p>);\n  }\n}\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    }\n  }\n  //Stores the value in the searchbox\n  handleChange = (event) => {\n    this.setState({value: event.target.value});\n  }\n  search = (event) => {\n    event.preventDefault();\n    //TODO:  Clear Search Results\n\n    //Make the API Request\n    let query = this.state.value;\n    let myHeaders = new Headers();\n    myHeaders.append(\"Accept\", \"application/json\");\n\n    let requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=\" + query + \"&key=\" + API_KEY, requestOptions).then(response => response.text()).then(result => {\n      let results = JSON.parse(result).items;\n      let songList = []\n      for (const item of results) {\n        //Process API Response\n\n        let song = {\n          title: item.snippet.title,\n          artist: item.snippet.channelTitle,\n          cover: item.snippet.thumbnails.default.url,\n          id: item.id.videoId\n        }\n\n        if (song.id != undefined) {\n          songList.push(song);\n\n        }\n\n      }\n      this.props.searchCallback(songList);\n    }).catch(error => console.log('error', error));\n  }\n\n  render() {\n    return (<form>\n      <div className=\"search\">\n        <button aria-label=\"search\" id=\"search-button\" onClick={this.search}>\n          <FontAwesomeIcon icon={faSearch}/>\n\n        </button>\n        <label htmlFor=\"searchbar\"></label>\n        <input type=\"text\" onChange={this.handleChange} placeholder=\"Search for a song\" name=\"searchbar\" id=\"searchbar\"></input>\n      </div>\n    </form>);\n  }\n}\n\nclass SearchCard extends Component {\n  render() {\n    let song = this.props.song;\n    let addToQueue = this.props.enqueueCallback;\n    return (<div className=\"card\" onClick={() => addToQueue(song)}>\n      <p className=\"song-title\">{song.title}</p>\n      <p className=\"song-artist\">{song.artist}</p>\n      <p className=\"song-length\">{JSON.stringify(song)}</p>\n\n      <div className=\"song-art\">\n        <img src={song.cover}/>\n      </div>\n    </div>);\n  }\n}\n\nclass QueueCard extends Component {\n  render() {\n    let song = this.props.song;\n    let removeFromQueue = this.props.dequeueCallback;\n    return (<div className=\"card\">\n      <button className=\"close-button\" aria-label=\"Close Account Info Modal Box\" onClick={() => removeFromQueue(song)}>&times;</button>\n      <p className=\"song-title\">{song.title}</p>\n      <p className=\"song-artist\">{song.artist}</p>\n      <p className=\"song-length\">{JSON.stringify(song)}</p>\n\n      <div className=\"song-art\">\n        <img src={song.cover}/>\n      </div>\n    </div>);\n  }\n}\n\nclass MediaControls extends Component { \n  render() {\n    let player = this.props.player;\n    return (<div className=\"media-controls\">\n\n      <button id=\"play\" aria-label=\"play pause\" onClick={(event) => {\n        event.preventDefault();\n        console.log(\"test\");\n        let playerState = player.current.player.getPlayerState();\n        if(playerState == 1)\n        {\n          player.current.player.pauseVideo();\n        }\n        else if (playerState == 2){\n          player.current.player.playVideo();\n        }\n      }}>\n        <FontAwesomeIcon icon={faPlay}/>\n      </button>\n      <button id=\"next\" aria-label=\"next\">\n        <FontAwesomeIcon icon={faStepForward}/>\n      </button>\n    </div>);\n  }\n}\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.player = React.createRef();\n    this.state = {\n      searchResults: [],\n      playerVisible: false\n    }\n  }\n\n  showPlayer() {\n    this.setState({playerVisible: true})\n  }\n\n  updateSearchResults = (songs) => {\n    this.setState({searchResults: songs})\n  }\n\n  addToQueue = (song) => {\n    if (this.props.songQueue == 0) {\n      this.showPlayer()\n\n      this.player.current.player.loadVideoById(song.id);\n\n    }\n    this.props.enqueue(song)\n\n  }\n  render() {\n    return (<div className=\"dashboard\">\n      <Instructions/>\n      <div className=\"room-functions\">\n        <button type=\"button\" id=\"join-room\" className=\"btn btn-primary btn-lg\">Join room</button>\n        <button type=\"button\" id=\"create-room\" className=\"btn btn-secondary btn-lg\">Create room</button>\n      </div>\n      <input type=\"text\" id=\"room-input\" placeholder=\"Enter room code\"/>\n\n      <SearchForm searchCallback={this.updateSearchResults}/>\n\n      <div style={{\n          display: this.state.playerVisible\n            ? 'block'\n            : 'none'\n        }}>\n        <YouTube songQueue={this.props.songQueue} dequeue={this.props.dequeue} ref={this.player} show={this.showPlayer} YTid=\"8tPnX7OPo0Q\"/>\n      </div>\n      <MediaControls player={this.player}/>\n      <SearchResults enqueueCallback={this.addToQueue} songList={this.state.searchResults}/>\n    </div>);\n  }\n}\n\nclass SearchResults extends Component {\n\n  render() {\n    let addToQueue = this.props.enqueueCallback;\n    return (<div className=\"search-results\">\n      <div className=\"card-container\">\n        {\n          (this.props.songList)\n            ? this.props.songList.map((el) => <SearchCard enqueueCallback={addToQueue} key={el.id} song={el}/>)\n            : ' '\n        }\n      </div>\n    </div>);\n  }\n}\nlet loadYT;\nclass YouTube extends Component {\n  constructor(props) {\n    super(props);\n    this.player = {};\n  }\n  componentDidMount() {\n    if (!loadYT) {\n      loadYT = new Promise((resolve) => {\n        const tag = document.createElement('script')\n        tag.src = 'https://www.youtube.com/iframe_api'\n        const firstScriptTag = document.getElementsByTagName('script')[0]\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\n        window.onYouTubeIframeAPIReady = () => resolve(window.YT)\n      })\n    }\n    loadYT.then((YT) => {\n      this.player = new YT.Player('player', {\n        videoId: this.props.YTid,\n        events: {\n          onReady: this.onPlayerReady,\n          onStateChange: (event) => {\n            if (event.data == YT.PlayerState.ENDED) {\n              console.log(this.props.songQueue.length);\n              this.props.dequeue();\n              console.log(this.props.songQueue[0]);\n              if (this.props.songQueue.length > 0) {\n                this.player.loadVideoById(this.props.songQueue[0].id)\n              }\n\n            }\n          }\n        }\n      });\n\n    })\n  }\n\n  onPlayerReady = (event) => {\n    event.target.playVideo();\n  }\n\n  render() {\n    return (<div id='player'></div>)\n  }\n}\n\nclass Queue extends Component {\n  removeFromQueue = (song) => {\n    this.props.dequeue(song)\n  }\n  componentDidUpdate(prevProps) {}\n  render() {\n    return (<div>\n      <div className=\"queue-header\">Queue</div>\n      <div className=\"card-container\">\n        {this.props.songQueue.map((el) => <QueueCard dequeueCallback={this.removeFromQueue} key={el.id} song={el} \n           />)}\n      </div>\n    </div>);\n  }\n}\nclass MenuItem extends Component {\n  render() {\n    let dest = this.props.dest;\n    let text = this.props.text;\n    let displayMenu = this.props.displayMenu;\n    let dispayString = displayMenu\n      ? \"block\"\n      : \"none\";\n    return (<li className=\"item\" style={{\n        display: dispayString\n      }}>\n      <a href={dest}>{text}</a>\n    </li>)\n  }\n}\n\nclass Toggle extends Component {\n  render() {\n    return (<li className=\"toggle\" onClick={this.props.menuCallback}>\n      <button>\n        <FontAwesomeIcon icon={faBars}/>\n\n      </button>\n    </li>);\n  }\n}\n\nclass Footer extends Component {\n  render() {\n    return (<footer>\n      &copy; 2020 Ajay Kristipati, Daniel Lin, Sailesh Sivakumar\n    </footer>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}